##################################################################
# This macro exectutes DISCUS and KUPLOT to create a mesh
# of atoms and its Fourier transform via WWW interface.
#
# Version: 1.0
# Author:  Th. Proffen  (tproffen@lanl.gov)
#          R.B. Neder   (reinhard.neder@mail.uni-wuerzburg.de)
##################################################################
# Required parameters:
#
#    $1  : H index 
#    $2  : K index 
#    $3  : Ratio x/y
#    $4  : Angle x,y
#    $5  : Rotation angle of complete structure
#    $6  : Shift of structure in x
#    $7  : Shift of structure in y
#    $8  : Radiation
#    $9  : GIF size
#
##################################################################
#
set error,exit
#
discus
fopen 1,teach_planes_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
fput 1,'<h2>An error occured during the calculations.</h2>'
fput 1,'<p>Check that numerical fields contain numbers only'
fput 1,'   and that atom names are spelled correctly'
fclose 1
#
if ($1.eq.0 .and. $2.eq.0 ) then
  fopen 1,teach_planes_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
  fput 1,'<h2>H,K must not both be zero !</h2>'
  fclose 1
elseif($3.le.0.0) then
  fopen 1,teach_planes$1_$2_$3_$4_$5_$6_$7_$8_$9.err
  fput 1,'<h2>Invalid axis ratio specified !</h2>'
  fput 1,'Must be larger than 0 '
  fclose 1
elseif($4.lt.0.1 .or. 179.9.lt.$4) then
  fopen 1,teach_planes$1_$2_$3_$4_$5_$6_$7_$8_$9.err
  fput 1,'<h2>Invalid angle between axis specified !</h2>'
  fput 1,'Must be larger in the intervall 0.1 through 179.9 degrees 0 '
  fclose 1
else
  i[20] =  5
  i[21] =  5
  r[20] = $3
  r[21] = $4
  r[22] = $5
  r[23] = $6
  r[24] = $7
#
  r[19] = 1.0
#
  fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.cell
  fput 1,'title unit cell'
  fput 1,'spcgr P1'
  fput 1,'cell ',1.0,$3,1.0,90.0,90.0,$4
  fput 1,'atoms'
  fput 1,'Pb  0.000  0.000  0.000  1.0'
  fclose 1
#
  read
  cell tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.cell,5,5,1
#
  fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.dstar
  fformat 2,f10.4
  r[100] = 1./dstar($1,$2,0.)
  r[101] =    dstar($1,$2,0.)
  fput 1,'d spacing : ',r[100],' \A'
  fput 1,'d star    : ',r[101],' \A\u-1\d'
  fclose 1
#
  vprod 0,0,1, 1,0,0,ddd
  trans
    anew 1,0,0
    bnew res[1],res[2],res[3]
    cnew 0,0,1
    oold $6 , $7  ,0.0
    sel all
    incl all
    c2old $6,$7,0,dd
  exit
#
  symm
    angle $5
    trans 0.0,0.0,0.0
    origin 0.0,0.0,0.0
    power 1
    mode replace
    des all
    sel 1
    type proper
    uvw 0,0,1
    incl all
    run
  exit
#
# Write the corners of the direct and reciprocal unit cell
#
  fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.edge
  symm
    calc 0,0,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,0,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,1,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,1,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,0,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  fclose 1
#
  fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.redge
  symm
    calc 0,0,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,0,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,1,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,1,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,0,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  fclose 1
#
# draw vector HK in direct space
#
  fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.dwert
  symm
    calc 0,0,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
  fput 1,res[1],res[2],0
  r2d $1,$2,0
  r[11] = res[1]
  r[12] = res[2]
  r[13] = res[3]
  r[14] = blen(r[11],r[12],r[13])
  r[15] = dstar($1,$2,0)
  r[11] = r[11] /r[14]/r[15]
  r[12] = r[12] /r[14]/r[15]
  r[13] = r[13] /r[14]/r[15]
  symm
    calc r[11],r[12],r[13],d
  exit
    trans
    c2new res[1],res[2],0,dd
  exit
  fput 1,res[1],res[2],0
  fclose 1
#
# draw planes HK
#
if($1.eq.0) then
  r[31] =  10.
  r[32] =   0.
  r[33] = -10.
  r[34] =   0.
  r[35] =   0.
  r[36] =   1./$2
elseif($2.eq.0) then
  r[31] =   0.
  r[32] =  10.
  r[33] =   0.
  r[34] = -10.
  r[35] =   1./$1
  r[36] =   0.
else
  r[31] =  10./$1
  r[32] = -10./$2
  r[33] = -10./$1
  r[34] =  10./$2
  r[35] =   0.5/$1
  r[36] =   0.5/$2
endif
#
symm
  calc r[31],r[32],0,d
  r[41] = res[1]
  r[42] = res[2]
  calc r[33],r[34],0,d
  r[43] = res[1]
  r[44] = res[2]
  trans 0,0,0
  calc r[35],r[36],0,d
  r[45] = res[1]
  r[46] = res[2]
exit
trans
  c2new r[41],r[42],0.0,dd
exit
r[41] = res[1]
r[42] = res[2]
trans
  c2new r[43],r[44],0.0,dd
exit
r[43] = res[1]
r[44] = res[2]
trans
  oold  0.0, 0.0, 0.0
  c2new r[45],r[46],0.0,dd
exit
r[45] = res[1]
r[46] = res[2]
fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.planes
do i[0] = -5,5
  r[51] = r[41] + (2*i[0]  )*r[45]
  r[52] = r[42] + (2*i[0]  )*r[46]
  r[53] = r[43] + (2*i[0]  )*r[45]
  r[54] = r[44] + (2*i[0]  )*r[46]
  fput 1, r[51], r[52]
  fput 1, r[53], r[54]
  r[51] = r[41] + (2*i[0]+1)*r[45]
  r[52] = r[42] + (2*i[0]+1)*r[46]
  r[53] = r[43] + (2*i[0]+1)*r[45]
  r[54] = r[44] + (2*i[0]+1)*r[46]
 fput 1, r[53], r[54]
 fput 1, r[51], r[52]
enddo
fclose 1
fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.hkl
  symm
    calc $1,$2,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
  fput 1, 0.0, 0.0
  fput 1, res[1],res[2],0
fclose 1
#
  trans
    oold $6, $7, 0.0
    run
  exit
#
  four
  ll  -4.5, -4.5, 0.0
  lr   4.5, -4.5, 0.0
  ul  -4.5,  4.5, 0.0
  na 151
  no 151
  run
  exit
#
  output
  form stan
  outf tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.inte
  value inte
  run
  exit
#
  insert si, $6, $7, 0.0, 1.0
  save tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.stru
  plot
  prog kuplot
  ext all
  sel si
  sel pb
  set pb,3,3,2.0
  set si,3,6,2.0
  outf tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.plot
  thick 1.0
  run
  exit
#
  if ($8.eq.1) then
    four
    xray
    exit
  else
    four
    neut
    exit
  endif
#
  system rm -f teach_planes_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
#
endif
exit
#
##################################################################
# Here we start KUPLOT
##################################################################
#
kuplot
#
fopen 1,teach_planes_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
fput 1,'<h2>An error occured during the calculations.</h2>'
fput 1,'<p>Check that numerical fields contain numbers only'
fput 1,'   and that atom names are spelled correctly'
fclose 1
#
rese
#
load cr,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.plot
load ni,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.inte
load xy,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.planes
load xy,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.hkl
load xy,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.edge
load xy,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.redge
load xy,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.dwert
#
buf 0.06
lwid 0,0.1
font just,center
font typ,1,1
font typ,2,1
font typ,3,1
font typ,4,1
font typ,5,1
font typ,6,1
#
fopen 1,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.txb
fformat 2,i4
fformat 3,i4
fformat 5,f6.1
fput 1,'H K   :',$1,$2,'  Rotation : ',$5
fformat 2,f8.2
fformat 3,*
fformat 4,f8.2
fput 1,'b/a   :',$3,'  Shift x : ',$6
fput 1,'Angle :',$4,'  Shift y : ',$7
fclose 1
#
nfra 4
sfra 1,0.00, 0.25,  0.50, 1.00
sfra 2,0.50, 0.25,  1.00, 1.00
sfra 3,0.10, 0.00,  0.50, 0.25
sfra 4,0.50, 0.00,  1.00, 0.25
#
afra 1
kfra 1,1,3,5,7
skal xmin[1]-0.5,xmax[1]+0.5,ymin[1]-0.5,ymax[1]+0.5
mark 1,1
aver 1
achx x [\A]
achy y [\A]
tit2 Plane : ($1,$2,0)
fnam off
ltyp 3,1
lwid 3,0.5
lcol 3,2
ltyp 5,1
lwid 5,0.5
lcol 5,1
ltyp 7,1
lwid 7,0.8
lcol 7,2
#
afra 2
kfra 2,2,4,6
skal
mark 1,1
aver 1
achx h [\A\u-1\d]
achy k [\A\u-1\d]
achz Intensity
if ($8.eq.1) then
  tit2 X-ray scattering
else
  tit2 Neutron scattering
endif
fnam off
mean 2
r[50]=res[3]-3.0*res[6]
if (r[50].lt.0.0) then
  r[50]=0.0
endif
r[51]=res[3]+3.0*res[6]-r[50]
hlin 1,r[50],r[51],1
hart 2,2
cmap fire
ltyp 4,1
lcol 4,2
lwid 4,0.5
ltyp 6,1
lcol 6,3
lwid 6,0.5
#
afra 3
kfra 3,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.txb
font color,5,3
font size,5,14
font just,left
#
afra 4
kfra 4,tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.dstar
font color,5,3
font size,5,14
font just,left
#
save ps,teach_planes_$1_$2_$3_$4_$5_$6_$7_$8_$9.ps
size[3]=$9
save pic,teach_planes_$1_$2_$3_$4_$5_$6_$7_$8_$9.gif
#
  system rm -f teach_planes_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
#
exit
#
##################################################################
# Some cleaning up - only GIF output remains
##################################################################
#
system rm -f tmp_$1_$2_$3_$4_$5_$6_$7_$8_$9.*
exit
