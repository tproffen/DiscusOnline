#!/bin/csh
##################################################################
# This macro exectutes DISCUS and KUPLOT to create a mesh
# of atoms and its Fourier transform via WWW interface.
#
# Version: 1.0
# Author:  Th. Proffen  (tproffen@lanl.gov)
#          R.B. Neder   (reinhard.neder@mail.uni-wuerzburg.de)
##################################################################
# Required parameters:
#
#    $1  : Number of atoms in x
#    $2  : Number of atoms in y
#    $3  : Ratio x/y
#    $4  : Angle x,y
#    $5  : Rotation angle of complete structure
#    $6  : Shift of structure in x
#    $7  : Shift of structure in y
#    $8  : Radiation
#    $9  : GIF size
#
##################################################################
# Here we start DISCUS
##################################################################
#
discus << EOF > /dev/null
set prompt,redirect
set error,exit
fopen 1,teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
fput 1,'<h2>An error occured during the calculations.</h2>'
fput 1,'<p>Check that numerical fields contain numbers only'
fput 1,'   and that atom names are spelled correctly'
fclose 1
#
if ($1.lt.1 .or. $1.gt.20 .or. $2.lt.1 .or.$2.gt.20) then
  fopen 1,teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
  fput 1,'<h2>Invalid number of atoms specified !</h2>'
  fput 1,'Allowed range: 1 to 20'
  fclose 1
elseif($3.le.0.0) then
  fopen 1,teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
  fput 1,'<h2>Invalid axis ratio specified !</h2>'
  fput 1,'Must be larger than 0 '
  fclose 1
elseif($4.lt.0.1 .or. 179.9.lt.$4) then
  fopen 1,teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
  fput 1,'<h2>Invalid angle between axis specified !</h2>'
  fput 1,'Must be larger in the intervall 0.1 through 179.9 degrees 0 '
  fclose 1
else
  i[20] = $1
  i[21] = $2
  r[20] = $3
  r[21] = $4
  r[22] = $5
  r[23] = $6
  r[24] = $7
#
  r[19] = 1.0
#
# Create the unit cell
#
  fopen 1,$$.cell
  fput 1,'title unit cell'
  fput 1,'spcgr P1'
  fput 1,'cell ',1.0,$3,1.0,90.0,90.0,$4
  fput 1,'atoms'
  fput 1,'Pb  0.000  0.000  0.000  1.0'
  fclose 1
#
  read
  cell $$.cell,$1,$2,1
#
  fopen 1,$$.dstar
  fformat 2,f10.4
  r[100] =    dstar(1,0,0)
  r[101] =    dstar(0,1,0)
  r[102] =    rang(1,0,0,0,1,0)
  fput 1
  fput 1
  fput 1,'   a*     : ',r[100],' \A\u-1\d'
  fput 1,'   b*     : ',r[101],' \A\u-1\d'
  fformat 2,f10.1
  fput 1,'   gamma* : ',r[102],' °'
  fclose 1
#
# Determine the transformation to cartesian space
#
  vprod 0,0,1, 1,0,0,ddd
  trans
    anew 1,0,0
    bnew res[1],res[2],res[3]
    cnew 0,0,1
    oold $6 , $7  ,0.0
    sel all
    incl all
    c2old $6,$7,0,dd
  exit
#
  r[3] = 0.0
  r[4] = 0.0
  if($1.eq.2) then
    r[3] = 1.
  endif
  if($2.eq.2) then
    r[4] = 1.
  endif
#
# due to the positioning of two unit cells in DISCUS, we have to apply 
# a shift first for crystals of 2*2 atoms
#
  symm
    angle 0.0
    trans r[3],r[4],0.0
    origin 0.0,0.0,0.0
    power 1
    mode replace
    des all
    sel 1
    type proper
    uvw 0,0,1
    incl all
    run
  exit
#
# Now lets apply the rotation
#
  symm
    angle $5
    trans 0.0, 0.0, 0.0
    run
  exit
#
# Write the corners of the direct and reciprocal unit cell
#
  fopen 1,$$.edge
  symm
    calc 0,0,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,0,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,1,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,1,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,0,0,d
  exit
  trans
    c2new res[1],res[2],0,dd
  exit
    fput 1,res[1],res[2],0
  fclose 1
#
  fopen 1,$$.redge
  symm
    calc 0,0,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,0,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 1,1,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,1,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  symm
    calc 0,0,0,r
  exit
  trans
    c2new res[1],res[2],0,rr
  exit
    fput 1,res[1],res[2],0
  fclose 1
#
# Finally the transformation into cartesian space
#
  trans
    oold $6 , $7  ,0.0
    sel all
    incl all
    run 
  exit
#
  if ($8.eq.1) then
    four
    xray
    exit
  else
    four
    neut
    exit
  endif
#
  four
  ll  -4.5, -4.5, 0.0
  lr   4.5, -4.5, 0.0
  ul  -4.5,  4.5, 0.0
  na 151
  no 151
  run
  exit
#
  output
  form stan
  outf $$.inte
  value inte
  run
  exit
#
  insert si, $6, $7, 0.0, 1.0
#
  plot
  ext all
  exit
#
  if (i[20].eq.1 .and. i[21].eq.1) then
    plot
    ext x,-0.5,0.5
    ext y,-0.5,0.5
    ext z,-0.5,0.5
    exit
  endif
#
  save $$.stru
#
  plot
  sel pb
  sel si
  set pb,3,3,2.0
  set si,3,2,2.0
  outf $$.plot
  thick 1.0
  show
  run
  exit
#
  system rm -f teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
#
endif
exit
EOF
#
##################################################################
# Here we start KUPLOT
##################################################################
#
if (-f teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err) then
  rm -f $$.*
  exit 1
endif
#
kuplot << EOF > /dev/null
set prompt,redirect
set error,exit
fopen 1,teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
fput 1,'<h2>An error occured during the calculations.</h2>'
fput 1,'<p>Check that numerical fields contain numbers only'
fput 1,'   and that atom names are spelled correctly'
fclose 1
#
rese
#
load cr,$$.plot
load ni,$$.inte
load xy,$$.edge
load xy,$$.redge
#
buf 0.06
lwid 0,0.1
font just,center
font typ,1,1
font typ,2,1
font typ,3,1
font typ,4,1
font typ,5,1
font typ,6,1
#
fopen 1,$$.txb
fformat 2,i4
fformat 4,i4
fformat 5,f6.1
fput 1,'   Atoms :',$1,' * ',$2
fput 1
fformat 2,f8.2
fformat 3,*
fformat 4,f8.2
fput 1,'   a     :', 1,' \A   Rotation : ',$5,' °'
fput 1,'   b     :',$3,' \A   Shift x : ',$6
fput 1,'   Angle :',$4,' °   Shift y : ',$7
fclose 1
#
nfra 4
sfra 1,0.00, 0.25,  0.50, 1.00
sfra 2,0.50, 0.25,  1.00, 1.00
sfra 3,0.00, 0.00,  0.50, 0.25
sfra 4,0.55, 0.00,  1.00, 0.25
#
afra 1
kfra 1,1,3
r[0] = xmin[1]-0.5
r[1] = xmax[1]+0.5
r[2] = ymin[1]-0.5
r[3] = ymax[1]+0.5
if($1.eq.1) then
  r[0] = xmin[1]-1.5
  r[1] = xmax[1]+1.5
endif
if($2.eq.1) then
  r[2] = ymin[1]-1.5
  r[3] = ymax[1]+1.5
endif
skal r[0],r[1],r[2],r[3]
mark 1,1
aver 1
achx x [\A]
achy y [\A]
tit2 Grid of $1x$2 atoms
fnam off
ltyp 3,1
lwid 3,0.5
lcol 3,1
bond 1,1 ,0.005,1,6,0.2
bond 2,$3,0.005,1,6,0.2
#
afra 2
kfra 2,2,4
skal
mark 1,1
aver 1
achx h [\A\u-1\d]
achy k [\A\u-1\d]
achz Intensity
if ($8.eq.1) then
  tit2 X-ray scattering
else
  tit2 Neutron scattering
endif
fnam off
mean 2
r[50]=res[3]-3.0*res[6]
if (r[50].lt.0.0) then
  r[50]=0.0
endif
r[51]=res[3]+3.0*res[6]-r[50]
hlin 1,r[50],r[51],1
hart 2,2
cmap fire
ltyp 4,1
lcol 4,3
lwid 4,0.5
#
afra 3
kfra 3,$$.txb
font color,5,3
font size,5,14
font just,left

afra 4
kfra 4,$$.dstar
font color,5,3
font size,5,14
font just,left
#
save ps,teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.ps
size[3]=$9
save pic,teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.gif
#
  system rm -f teach_grid_$1_$2_$3_$4_$5_$6_$7_$8_$9.err
#
exit
EOF
#
##################################################################
# Some cleaning up - only GIF output remains
##################################################################
#
#rm -f $$.*
